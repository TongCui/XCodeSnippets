# Nice article

# http://docs.urbanairship.com/reference/troubleshooting/ios-push.html


## iOS Push Troubleshooting

- Missing pushes from Test Push Form
  Dev and Dis

- Missing in-app messages
  1. Cellular data
    Issues with in-app message display are more present when the device is using cellular data. Try Wifi first

  2. Throttling
    Apple may choose to throttle your message sending, especially if you send large numbers of messages close together.

  3. App is neither backgrounded nor open
    Thottling is most likely the root cause

- Possible Network Issues

  1. Cellular data connectivity
    Under ideal circumstances, APNS will maintain a persistent connection to each device. This strategy saves power by avoiding polling, allowing the radio interface more time to sleep.
    One the device a daemon(apsd) maintans the connection to Apple's servers. If this daemon loses its connection, it will reconnect...eventually. Depending on network conditions, apsd can take a while to retry and reestablish connectivity. If several notifications were sent while the device was off-line, only the latest one would be delivered.

- Networks may restrict access to tcp/5223

  iOS devices connect to the APNS service on TCP port 5223. If the local(client-side) network restricts access to this port, push notification delivery will fail.
  This problem is most commonly observed on WiFi provided by employers with restrictive default-deny outbound firewall policies.

- WiFi is being used for push notifications

  Given the choice between WiFi and 3G, APNS will prefer to use 3G and maintain a persistent connection to the device. However, if 3G is not available, a slightly different strategy is used. Some older devices with WiFi only will switch to polling the Apple Push Notification service every 15 minutes when the display turns off and the device sleeps to conserve power. (i.e, A persistent connection is not maintained.)
  Keeping the device on USB power will maintain the connection.

- Inactive device token

  1. Apple tells us that the application has been uninstalled via the feedback service, which we check on a regular basis.

  2. Apple rejected the device token for your app upon receipt of the notification at their servers. 

  3. If the device token was created when iOS 6 was installed, and the device has since updated to iOS 7, the old device token is eventually rejected by Apple because the device now has a new, app-specific iOS 7 device token.

 * In any case, application should expect and handle inactive device tokens proplery, We recommend that develops do one of the following:

  1. Register the device token every time the application is opened.

- Rejected device token

  When Apple rejects a device token, it means that for the particular push enviroment (sandbox or production), the device token is not recognized.

  Device tokens serve the purpose of a unique identifier, but they are cryptographically generated by APNS, and returned to the device. 

  This token, combined with your application's aps-environment entitlement, is what allows for push notifications to be sent through APNS to your users

  
